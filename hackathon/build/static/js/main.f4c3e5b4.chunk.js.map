{"version":3,"sources":["firebase.js","pages/loginPage/loginPage.jsx","pages/signUpPage/signUpPage.jsx","context/AuthContext.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","theme","createTheme","loginPage","handleSubmit","event","a","preventDefault","data","FormData","currentTarget","email","get","password","signInWithEmailAndPassword","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","color","Button","mb","Grid","container","item","xs","Link","href","signUpPage","createUserWithEmailAndPassword","style","justifyContent","AuthContext","createContext","useAuthContext","useContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","unsubscribed","onAuthStateChanged","Provider","PrivateRoute","Component","rest","render","routeProps","to","PublicRoute","App","className","exact","path","homePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4c3e5b4.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC0KWAb7zjMd7NzrRRbumtRUYP7HhxXVbU\",\n  authDomain: \"mitstuihackathon.firebaseapp.com\",\n  projectId: \"mitstuihackathon\",\n  storageBucket: \"mitstuihackathon.appspot.com\",\n  messagingSenderId: \"846991822398\",\n  appId: \"1:846991822398:web:270f173a9bce8ec3abcb6f\",\n  measurementId: \"G-3P7PQ4GENZ\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(firebaseApp)\n","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { auth } from '../../firebase';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\n\nconst theme = createTheme();\n\nconst loginPage = () => {\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const email = data.get('email')\n    const password = data.get('password')\n    await signInWithEmailAndPassword(auth, email, password);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            ログイン\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"メールアドレス\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"パスワード\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"ログイン情報を保存しますか\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              ログイン\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  パスワードをお忘れですか？\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"新規登録\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default loginPage;\n","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { auth } from '../../firebase';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\n\nconst theme = createTheme();\n\nconst signUpPage = () => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const email = data.get('email')\n    const password = data.get('password')\n    createUserWithEmailAndPassword(auth, email, password);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            新規登録\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"メールアドレス\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"パスワード\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              新規登録\n            </Button>\n\n            <Grid container style={{ justifyContent: 'flex-end' }} >\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"新規登録\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default signUpPage;\n","import { createContext, useState, useContext, useEffect } from 'react';\nimport { auth } from '../firebase';\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nconst AuthContext = createContext();\n\nexport function useAuthContext() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  const value = {\n    user,\n    loading,\n  };\n\n  useEffect(() => {\n    const unsubscribed = onAuthStateChanged(auth, (user) => {\n      setUser(user);\n      setLoading(false);\n    });\n    return () => {\n      unsubscribed();\n    };\n  }, []);\n\n  if (loading) {\n    return <p>loading...</p>;\n  } else {\n    return (\n      <AuthContext.Provider value={value}>\n        {!loading && children}\n      </AuthContext.Provider>\n    );\n  }\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport { useAuthContext } from '../context/AuthContext';\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { user } = useAuthContext();\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) => {\n        return user ? <Component {...routeProps} /> : <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { Route, Redirect } from 'react-router-dom';\nimport { useAuthContext } from '../context/AuthContext';\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  const { user } = useAuthContext();\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) => {\n        return !user ? <Component {...routeProps} /> : <Redirect to=\"/\" />;\n      }}\n    />\n  );\n};\n\nexport default PublicRoute;\n","import './App.css';\nimport homePage from './pages/homePage/homePage';\nimport loginPage from './pages/loginPage/loginPage';\nimport signUpPage from './pages/signUpPage/signUpPage';\nimport { AuthProvider } from './context/AuthContext';\nimport { BrowserRouter } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AuthProvider>\n          <div style={{ margin: '2em' }}>\n            <BrowserRouter>\n              <PrivateRoute exact path=\"/\" component={homePage} />\n              <PublicRoute path=\"/signup\" component={signUpPage} />\n              <PublicRoute path=\"/login\" component={loginPage} />\n            </BrowserRouter>\n          </div>\n        </AuthProvider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}