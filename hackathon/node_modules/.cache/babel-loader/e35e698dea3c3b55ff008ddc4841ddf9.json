{"ast":null,"code":"import _slicedToArray from \"/Users/a81701/mitsuiHackathon/hackathon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nimport extractEventHandlers from '../utils/extractEventHandlers';\nexport default function useButton(props) {\n  var _ref;\n\n  var component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      href = props.href,\n      ref = props.ref,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      to = props.to,\n      type = props.type;\n  var buttonRef = React.useRef();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      active = _React$useState2[0],\n      setActive = _React$useState2[1];\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisibleRef = _useIsFocusVisible.isFocusVisibleRef,\n      handleFocusVisible = _useIsFocusVisible.onFocus,\n      handleBlurVisible = _useIsFocusVisible.onBlur,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      focusVisible = _React$useState4[0],\n      setFocusVisible = _React$useState4[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useEffect(function () {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n\n  var handleMouseLeave = function handleMouseLeave(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onMous;\n\n      if (focusVisible) {\n        event.preventDefault();\n      }\n\n      (_otherHandlers$onMous = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n    };\n  };\n\n  var handleBlur = function handleBlur(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onBlur;\n\n      handleBlurVisible(event);\n\n      if (isFocusVisibleRef.current === false) {\n        setFocusVisible(false);\n      }\n\n      (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n    };\n  };\n\n  var handleFocus = useEventCallback(function (otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onFocu2; // Fix for https://github.com/facebook/react/issues/7769\n\n\n      if (!buttonRef.current) {\n        buttonRef.current = event.currentTarget;\n      }\n\n      handleFocusVisible(event);\n\n      if (isFocusVisibleRef.current === true) {\n        var _otherHandlers$onFocu;\n\n        setFocusVisible(true);\n        (_otherHandlers$onFocu = otherHandlers.onFocusVisible) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n      }\n\n      (_otherHandlers$onFocu2 = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu2.call(otherHandlers, event);\n    };\n  });\n  var elementType = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n\n  var isNonNativeButton = function isNonNativeButton() {\n    var button = buttonRef.current;\n    return elementType !== 'button' && !((button == null ? void 0 : button.tagName) === 'A' && button != null && button.href);\n  };\n\n  var handleMouseDown = function handleMouseDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onMous2;\n\n      if (event.target === event.currentTarget && !disabled) {\n        setActive(true);\n      }\n\n      (_otherHandlers$onMous2 = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);\n    };\n  };\n\n  var handleMouseUp = function handleMouseUp(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onMous3;\n\n      if (event.target === event.currentTarget) {\n        setActive(false);\n      }\n\n      (_otherHandlers$onMous3 = otherHandlers.onMouseUp) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);\n    };\n  };\n\n  var handleKeyDown = useEventCallback(function (otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyD;\n\n      if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n        event.preventDefault();\n      }\n\n      if (event.target === event.currentTarget && event.key === ' ' && !disabled) {\n        setActive(true);\n      }\n\n      (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event); // Keyboard accessibility for non interactive elements\n\n      if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n        var _otherHandlers$onClic;\n\n        event.preventDefault();\n        (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n      }\n    };\n  });\n  var handleKeyUp = useEventCallback(function (otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyU; // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n      // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n\n\n      if (event.target === event.currentTarget) {\n        setActive(false);\n      }\n\n      (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event); // Keyboard accessibility for non interactive elements\n\n      if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n        var _otherHandlers$onClic2;\n\n        (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n      }\n    };\n  });\n  var buttonProps = {};\n\n  if (elementType === 'button') {\n    buttonProps.type = type != null ? type : 'button';\n    buttonProps.disabled = disabled;\n  } else {\n    if (!href && !to) {\n      buttonProps.role = 'button';\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n\n  var handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  var handleRef = useForkRef(ref, handleOwnRef);\n\n  var getRootProps = function getRootProps(otherHandlers) {\n    var propsEventHandlers = extractEventHandlers(props);\n\n    var externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);\n\n    var ownEventHandlers = {\n      onBlur: handleBlur(externalEventHandlers),\n      onFocus: handleFocus(externalEventHandlers),\n      onKeyDown: handleKeyDown(externalEventHandlers),\n      onKeyUp: handleKeyUp(externalEventHandlers),\n      onMouseDown: handleMouseDown(externalEventHandlers),\n      onMouseLeave: handleMouseLeave(externalEventHandlers),\n      onMouseUp: handleMouseUp(externalEventHandlers)\n    };\n\n    var mergedEventHandlers = _extends({}, externalEventHandlers, ownEventHandlers); // onFocusVisible can be present on the props, but since it's not a valid React event handler,\n    // it must not be forwarded to the inner component.\n\n\n    delete mergedEventHandlers.onFocusVisible;\n    return _extends({\n      tabIndex: disabled ? -1 : tabIndex,\n      type: type,\n      ref: handleRef\n    }, buttonProps, mergedEventHandlers);\n  };\n\n  return {\n    getRootProps: getRootProps,\n    focusVisible: focusVisible,\n    setFocusVisible: setFocusVisible,\n    disabled: disabled,\n    active: active\n  };\n}","map":{"version":3,"sources":["/Users/a81701/mitsuiHackathon/hackathon/node_modules/@mui/core/ButtonUnstyled/useButton.js"],"names":["_extends","React","unstable_useEventCallback","useEventCallback","unstable_useForkRef","useForkRef","unstable_useIsFocusVisible","useIsFocusVisible","extractEventHandlers","useButton","props","_ref","component","components","disabled","href","ref","tabIndex","to","type","buttonRef","useRef","useState","active","setActive","isFocusVisibleRef","handleFocusVisible","onFocus","handleBlurVisible","onBlur","focusVisibleRef","focusVisible","setFocusVisible","useEffect","current","handleMouseLeave","otherHandlers","event","_otherHandlers$onMous","preventDefault","onMouseLeave","call","handleBlur","_otherHandlers$onBlur","handleFocus","_otherHandlers$onFocu2","currentTarget","_otherHandlers$onFocu","onFocusVisible","elementType","Root","isNonNativeButton","button","tagName","handleMouseDown","_otherHandlers$onMous2","target","onMouseDown","handleMouseUp","_otherHandlers$onMous3","onMouseUp","handleKeyDown","_otherHandlers$onKeyD","key","onKeyDown","_otherHandlers$onClic","onClick","handleKeyUp","_otherHandlers$onKeyU","onKeyUp","defaultPrevented","_otherHandlers$onClic2","buttonProps","role","handleOwnRef","handleRef","getRootProps","propsEventHandlers","externalEventHandlers","ownEventHandlers","mergedEventHandlers"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nimport extractEventHandlers from '../utils/extractEventHandlers';\nexport default function useButton(props) {\n  var _ref;\n\n  const {\n    component,\n    components = {},\n    disabled = false,\n    href,\n    ref,\n    tabIndex = 0,\n    to,\n    type\n  } = props;\n  const buttonRef = React.useRef();\n  const [active, setActive] = React.useState(false);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useEffect(() => {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n\n  const handleMouseLeave = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    (_otherHandlers$onMous = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n  };\n\n  const handleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n  };\n\n  const handleFocus = useEventCallback(otherHandlers => event => {\n    var _otherHandlers$onFocu2;\n\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      var _otherHandlers$onFocu;\n\n      setFocusVisible(true);\n      (_otherHandlers$onFocu = otherHandlers.onFocusVisible) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n    }\n\n    (_otherHandlers$onFocu2 = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu2.call(otherHandlers, event);\n  });\n  const elementType = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return elementType !== 'button' && !((button == null ? void 0 : button.tagName) === 'A' && button != null && button.href);\n  };\n\n  const handleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous2;\n\n    if (event.target === event.currentTarget && !disabled) {\n      setActive(true);\n    }\n\n    (_otherHandlers$onMous2 = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);\n  };\n\n  const handleMouseUp = otherHandlers => event => {\n    var _otherHandlers$onMous3;\n\n    if (event.target === event.currentTarget) {\n      setActive(false);\n    }\n\n    (_otherHandlers$onMous3 = otherHandlers.onMouseUp) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);\n  };\n\n  const handleKeyDown = useEventCallback(otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (event.target === event.currentTarget && event.key === ' ' && !disabled) {\n      setActive(true);\n    }\n\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event); // Keyboard accessibility for non interactive elements\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      var _otherHandlers$onClic;\n\n      event.preventDefault();\n      (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n    }\n  });\n  const handleKeyUp = useEventCallback(otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (event.target === event.currentTarget) {\n      setActive(false);\n    }\n\n    (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event); // Keyboard accessibility for non interactive elements\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      var _otherHandlers$onClic2;\n\n      (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n    }\n  });\n  const buttonProps = {};\n\n  if (elementType === 'button') {\n    buttonProps.type = type != null ? type : 'button';\n    buttonProps.disabled = disabled;\n  } else {\n    if (!href && !to) {\n      buttonProps.role = 'button';\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(ref, handleOwnRef);\n\n  const getRootProps = otherHandlers => {\n    const propsEventHandlers = extractEventHandlers(props);\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);\n\n    const ownEventHandlers = {\n      onBlur: handleBlur(externalEventHandlers),\n      onFocus: handleFocus(externalEventHandlers),\n      onKeyDown: handleKeyDown(externalEventHandlers),\n      onKeyUp: handleKeyUp(externalEventHandlers),\n      onMouseDown: handleMouseDown(externalEventHandlers),\n      onMouseLeave: handleMouseLeave(externalEventHandlers),\n      onMouseUp: handleMouseUp(externalEventHandlers)\n    };\n\n    const mergedEventHandlers = _extends({}, externalEventHandlers, ownEventHandlers); // onFocusVisible can be present on the props, but since it's not a valid React event handler,\n    // it must not be forwarded to the inner component.\n\n\n    delete mergedEventHandlers.onFocusVisible;\n    return _extends({\n      tabIndex: disabled ? -1 : tabIndex,\n      type,\n      ref: handleRef\n    }, buttonProps, mergedEventHandlers);\n  };\n\n  return {\n    getRootProps,\n    focusVisible,\n    setFocusVisible,\n    disabled,\n    active\n  };\n}"]},"metadata":{},"sourceType":"module"}