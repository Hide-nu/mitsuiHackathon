{"ast":null,"code":"var _jsxFileName = \"/Users/a81701/mitsuiHackathon/hackathon/src/components/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useAuthContext();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: routeProps => {\n      return user ? /*#__PURE__*/_jsxDEV(Component, { ...routeProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 55\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"E3A4Z1umPxUwUr1MhXzPwmHHqrw=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/a81701/mitsuiHackathon/hackathon/src/components/PrivateRoute.js"],"names":["Route","Redirect","useAuthContext","PrivateRoute","component","Component","rest","user","routeProps"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,cAAT,QAA+B,wBAA/B;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAWL,cAAc,EAA/B;AACA,sBACE,QAAC,KAAD,OACMI,IADN;AAEE,IAAA,MAAM,EAAGE,UAAD,IAAgB;AACtB,aAAOD,IAAI,gBAAG,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAmC,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAA9C;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVD;;GAAML,Y;UACaD,c;;;KADbC,Y;AAYN,eAAeA,YAAf","sourcesContent":["import { Route, Redirect } from 'react-router-dom';\nimport { useAuthContext } from '../context/AuthContext';\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { user } = useAuthContext();\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) => {\n        return user ? <Component {...routeProps} /> : <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}